# This approach has two distinct disadvantages:
# All dimensions must be uniquely named
#
# The default approach will not work on IE (not supported)
# .is-button {}
#
# to limit variants to their core type: (not supported by IE), note that :where has _no_ specificity ever (unlike :is)
# :where(.is-button).is-variant-primary {}
#
# in IE we can still do this but this raises specificity:
# .is-button.is-variant-primary {}
#
# Dimensions are no longer attached to their core type (hence the need for unique naming)
# .is-size-small {}
#
# In IE fallback mode however, the specificity is not enough, so we can do something sneaky to increase specificity artificially:
# .is-size-small.is-size-small {}

string component ?= null
string content ?= null
string [] extensions ?= series()
mixins ?= null

useDefaults = false
defaults = series("h1", "h2", "h3", "h4", "h5", "h6", "p", "button")

defaultSelector = when(useDefaults && component ? defaults, ", " + component, "")

# the default settings of the component are not shared to the extension, we assume they have their own default
echo(".is-" + component + defaultSelector + " {")

default = first(mixins[name ~ "^" + /component + "-variant-default"])
# if we don't have a default, we just take all the templates
if (default != null)
	echo("\t@include " + default/name + ";")
# we no longer generate a "default" default, you need to specifically set a default variant
else if (false)
	# first inject all the template mixins, they are the "default" variant
	for (mixin : mixins[name ~ "^template-.*"])
		echo("\t@include " + mixin/name + ";")

echo("}")

# the dimensions are shared across the extensions, so we have a multiple selector
echo(":where(:is-" + component + defaultSelector + ") {")

for (mixin : mixins[name ~ "^" + /component + "-variant-.*"])
	variant = replace("^" + component + "-", "", mixin/name)
	variantName = replace("^variant-", "", variant)
	if (mixin/name !~ ".*-default$")
		echo("\t.is-" + variant + " {")
		echo("\t\t@include " + mixin/name + ";")
		for (mixin : mixins[name ~ "^" + /component + "-" + /variantName + "-modifier-.*"])
			variantModifier = replace("^" + component + "-" + variantName + "-modifier-", "", mixin/name)
			echo("\t.is-" + variantModifier + " {")
			echo("\t\t@include " + mixin/name + ";")
			echo("\t}")
		echo("\t}")

echo("}")

# then finally inject all the dimensions
for (mixin : mixins[name !~ "^" + /component + "-variant-.*" && name !~ "^" + /component + "-.*-modifier-.*" && name ~ "^" + /component + "-.*"])
	echo(".is-" + replace("^" + component + "-", "", mixin/name) + " {")
	echo("\t@include " + mixin/name + ";")
	echo("}")